services:
  mariadb:
    image: mariadb:11.8.2
    container_name: mariadb
    restart: always
    environment:
      MARIADB_DATABASE: qiin
      MARIADB_USER: ${SPRING_DATASOURCE_USERNAME}
      MARIADB_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "3309:3306"
    volumes:
      - mariadb_data:/var/lib/mysql

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # Docker 네트워크 내부 통신용
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  app:
    build: . # 현재 디렉토리의 Dockerfile을 사용하여 이미지 빌드
    container_name: qiin-app
    depends_on:
      - mariadb
      - redis
      - kafka
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/qiin
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION}
    restart: "no"

volumes:
  mariadb_data: